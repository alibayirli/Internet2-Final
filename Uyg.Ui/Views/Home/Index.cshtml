@{
    ViewData["Title"] = "Home Page";
}
<div class="text-center">
    <h1 class="display-4">File Manager</h1>
</div>

<!-- Dosya Listesi -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h3>Dosya Listesi</h3>
                    <span class="badge bg-primary" id="fileCount">0 dosya</span>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="tbFileList">
                        <thead class="table-dark">
                            <tr>
                                <th>Dosya Adı</th>
                                <th>Kategori</th>
                                <th>Boyut</th>
                                <th>Yükleyen</th>
                                <th>Yüklenme Tarihi</th>
                                <th>Paylaşım Durumu</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            console.log("Home page yüklendi, dosya listesi getiriliyor...");

            var apiBaseUrl="@ViewBag.ApiBaseURL";
            console.log("API Base URL:", apiBaseUrl);

            if(localStorage.getItem("token")=="" || localStorage.getItem("token")==null){
                console.log("Token bulunamadı, login'e yönlendiriliyor");
                location.href="/Login";
                return false;
            }
            var token=localStorage.getItem("token");
            console.log("Token bulundu, uzunluk:", token.length);

            // Sayfa yüklendiğinde dosya listesini getir
            GetFileList();

            // Token'dan kullanıcı ID'sini çıkarma fonksiyonu
            function getUserId() {
                try {
                    var base64Url = token.split('.')[1];
                    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                    }).join(''));

                    var payload = JSON.parse(jsonPayload);
                    return payload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"] ||
                           payload["sub"] ||
                           payload["nameid"];
                } catch(e) {
                    console.log("User ID decode hatası:", e);
                    return null;
                }
            }

            function GetFileList(){
                console.log("GetFileList çağrıldı");
                console.log("API URL:", apiBaseUrl + "/FileModal");

                $.ajax({
                    url: apiBaseUrl + "/FileModal",
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (d) {
                        console.log("Dosya listesi başarıyla alındı:", d);
                        console.log("Dosya sayısı:", d ? d.length : 0);
                        FileToTable(d);
                    },
                    error: function (xhr, status, error) {
                        console.log("Dosya listesi HATASI:");
                        console.log("Status:", status);
                        console.log("Error:", error);
                        console.log("Response:", xhr.responseText);
                        console.log("Status Code:", xhr.status);

                        // Hata durumunda boş tablo göster
                        $("#tbFileList tbody").html('<tr><td colspan="6" class="text-center text-danger">Dosya listesi alınamadı: ' + error + '</td></tr>');
                        $("#fileCount").text("0 dosya");
                    }
                });
            }

            function FileToTable(data){
                console.log("FileToTable çağrıldı, data:", data);

                if (!data || data.length === 0) {
                    console.log("Veri yok veya boş array");
                    $("#tbFileList tbody").html('<tr><td colspan="6" class="text-center">Henüz dosya yüklenmemiş</td></tr>');
                    $("#fileCount").text("0 dosya");
                    return;
                }

                $("#tbFileList tbody").empty();
                var row="";
                var currentUserId = getUserId();

                $.each(data,function(i,item){
                    console.log("Dosya işleniyor:", item);
                    var fileSize = formatFileSize(item.fileSize || 0);
                    var categoryName = item.category ? item.category.name : "Kategori Yok";
                    var isOwner = item.userId === currentUserId;
                    var isShared = item.userId !== currentUserId; // Başkasının dosyası ise paylaşılan dosya

                    row+="<tr>";
                    row+="<td>";
                    if (isShared) {
                        row+="<i class='fa fa-share-alt text-info me-2' title='Paylaşılan Dosya'></i>";
                    } else {
                        row+="<i class='fa fa-file me-2'></i>";
                    }
                    row+=item.fileName+item.extension+"</td>";
                    row+="<td><span class='badge bg-secondary'>"+categoryName+"</span></td>";
                    row+="<td>"+fileSize+"</td>";
                    row+="<td>"+item.uploadedBy+"</td>";
                    row+="<td>"+FormatDate(item.uploadOn)+"</td>";

                    // Paylaşım durumu kolonu
                    row+="<td>";
                    if (isOwner) {
                        row+="<span class='badge bg-success'>Sahip</span>";
                    } else if (isShared) {
                        row+="<span class='badge bg-info'>Paylaşılan</span>";
                    }
                    row+="</td>";

                    row+="</tr>";
                });
                $("#tbFileList tbody").append(row);
                $("#fileCount").text(data.length + " dosya");
                console.log("Tablo güncellendi, " + data.length + " dosya eklendi");
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                var k = 1024;
                var sizes = ['Bytes', 'KB', 'MB', 'GB'];
                var i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            function FormatDate(dateString) {
                if (!dateString) return '';
                try {
                    var date = new Date(dateString);
                    var day = ("0" + date.getDate()).slice(-2);
                    var month = ("0" + (date.getMonth() + 1)).slice(-2);
                    var year = date.getFullYear();
                    var hours = ("0" + date.getHours()).slice(-2);
                    var minutes = ("0" + date.getMinutes()).slice(-2);

                    return day + "." + month + "." + year + " " + hours + ":" + minutes;
                } catch(e) {
                    return dateString;
                }
            }
        });
    </script>
}